### YamlMime:ManagedReference
items:
- uid: AttackSurfaceAnalyzer.Objects.FirewallObject
  commentId: T:AttackSurfaceAnalyzer.Objects.FirewallObject
  id: FirewallObject
  parent: AttackSurfaceAnalyzer.Objects
  children:
  - AttackSurfaceAnalyzer.Objects.FirewallObject.#ctor
  - AttackSurfaceAnalyzer.Objects.FirewallObject.Action
  - AttackSurfaceAnalyzer.Objects.FirewallObject.ApplicationName
  - AttackSurfaceAnalyzer.Objects.FirewallObject.Direction
  - AttackSurfaceAnalyzer.Objects.FirewallObject.FriendlyName
  - AttackSurfaceAnalyzer.Objects.FirewallObject.Identity
  - AttackSurfaceAnalyzer.Objects.FirewallObject.IsEnable
  - AttackSurfaceAnalyzer.Objects.FirewallObject.LocalAddresses
  - AttackSurfaceAnalyzer.Objects.FirewallObject.LocalPorts
  - AttackSurfaceAnalyzer.Objects.FirewallObject.LocalPortType
  - AttackSurfaceAnalyzer.Objects.FirewallObject.Name
  - AttackSurfaceAnalyzer.Objects.FirewallObject.Profiles
  - AttackSurfaceAnalyzer.Objects.FirewallObject.Protocol
  - AttackSurfaceAnalyzer.Objects.FirewallObject.RemoteAddresses
  - AttackSurfaceAnalyzer.Objects.FirewallObject.RemotePorts
  - AttackSurfaceAnalyzer.Objects.FirewallObject.Scope
  - AttackSurfaceAnalyzer.Objects.FirewallObject.ServiceName
  langs:
  - csharp
  - vb
  name: FirewallObject
  nameWithType: FirewallObject
  fullName: AttackSurfaceAnalyzer.Objects.FirewallObject
  type: Class
  source:
    remote:
      path: Lib/Objects/FirewallObject.cs
      branch: gfs/UpdateGuiNewCollectors
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: FirewallObject
    path: ../Lib/Objects/FirewallObject.cs
    startLine: 9
  assemblies:
  - AsaLib
  namespace: AttackSurfaceAnalyzer.Objects
  syntax:
    content: 'public class FirewallObject : CollectObject'
    content.vb: >-
      Public Class FirewallObject
          Inherits CollectObject
  inheritance:
  - System.Object
  - AttackSurfaceAnalyzer.Objects.CollectObject
  inheritedMembers:
  - AttackSurfaceAnalyzer.Objects.CollectObject.ResultType
  - AttackSurfaceAnalyzer.Objects.CollectObject.Message
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: AttackSurfaceAnalyzer.Objects.FirewallObject.Action
  commentId: P:AttackSurfaceAnalyzer.Objects.FirewallObject.Action
  id: Action
  parent: AttackSurfaceAnalyzer.Objects.FirewallObject
  langs:
  - csharp
  - vb
  name: Action
  nameWithType: FirewallObject.Action
  fullName: AttackSurfaceAnalyzer.Objects.FirewallObject.Action
  type: Property
  source:
    remote:
      path: Lib/Objects/FirewallObject.cs
      branch: gfs/UpdateGuiNewCollectors
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: Action
    path: ../Lib/Objects/FirewallObject.cs
    startLine: 14
  assemblies:
  - AsaLib
  namespace: AttackSurfaceAnalyzer.Objects
  summary: "\nGets or sets the action that the rules defines\n"
  example: []
  syntax:
    content: public FirewallAction Action { get; set; }
    parameters: []
    return:
      type: WindowsFirewallHelper.FirewallAction
    content.vb: Public Property Action As FirewallAction
  overload: AttackSurfaceAnalyzer.Objects.FirewallObject.Action*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: AttackSurfaceAnalyzer.Objects.FirewallObject.ApplicationName
  commentId: P:AttackSurfaceAnalyzer.Objects.FirewallObject.ApplicationName
  id: ApplicationName
  parent: AttackSurfaceAnalyzer.Objects.FirewallObject
  langs:
  - csharp
  - vb
  name: ApplicationName
  nameWithType: FirewallObject.ApplicationName
  fullName: AttackSurfaceAnalyzer.Objects.FirewallObject.ApplicationName
  type: Property
  source:
    remote:
      path: Lib/Objects/FirewallObject.cs
      branch: gfs/UpdateGuiNewCollectors
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: ApplicationName
    path: ../Lib/Objects/FirewallObject.cs
    startLine: 18
  assemblies:
  - AsaLib
  namespace: AttackSurfaceAnalyzer.Objects
  summary: "\nGets or sets the name of the application that this rule is about\n"
  example: []
  syntax:
    content: public string ApplicationName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ApplicationName As String
  overload: AttackSurfaceAnalyzer.Objects.FirewallObject.ApplicationName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: AttackSurfaceAnalyzer.Objects.FirewallObject.Direction
  commentId: P:AttackSurfaceAnalyzer.Objects.FirewallObject.Direction
  id: Direction
  parent: AttackSurfaceAnalyzer.Objects.FirewallObject
  langs:
  - csharp
  - vb
  name: Direction
  nameWithType: FirewallObject.Direction
  fullName: AttackSurfaceAnalyzer.Objects.FirewallObject.Direction
  type: Property
  source:
    remote:
      path: Lib/Objects/FirewallObject.cs
      branch: gfs/UpdateGuiNewCollectors
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: Direction
    path: ../Lib/Objects/FirewallObject.cs
    startLine: 22
  assemblies:
  - AsaLib
  namespace: AttackSurfaceAnalyzer.Objects
  summary: "\nGets or sets the data direction that the rule applies to\n"
  example: []
  syntax:
    content: public FirewallDirection Direction { get; set; }
    parameters: []
    return:
      type: WindowsFirewallHelper.FirewallDirection
    content.vb: Public Property Direction As FirewallDirection
  overload: AttackSurfaceAnalyzer.Objects.FirewallObject.Direction*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: AttackSurfaceAnalyzer.Objects.FirewallObject.FriendlyName
  commentId: P:AttackSurfaceAnalyzer.Objects.FirewallObject.FriendlyName
  id: FriendlyName
  parent: AttackSurfaceAnalyzer.Objects.FirewallObject
  langs:
  - csharp
  - vb
  name: FriendlyName
  nameWithType: FirewallObject.FriendlyName
  fullName: AttackSurfaceAnalyzer.Objects.FirewallObject.FriendlyName
  type: Property
  source:
    remote:
      path: Lib/Objects/FirewallObject.cs
      branch: gfs/UpdateGuiNewCollectors
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: FriendlyName
    path: ../Lib/Objects/FirewallObject.cs
    startLine: 26
  assemblies:
  - AsaLib
  namespace: AttackSurfaceAnalyzer.Objects
  summary: "\nGets or sets the resolved name of the rule\n"
  example: []
  syntax:
    content: public string FriendlyName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property FriendlyName As String
  overload: AttackSurfaceAnalyzer.Objects.FirewallObject.FriendlyName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: AttackSurfaceAnalyzer.Objects.FirewallObject.IsEnable
  commentId: P:AttackSurfaceAnalyzer.Objects.FirewallObject.IsEnable
  id: IsEnable
  parent: AttackSurfaceAnalyzer.Objects.FirewallObject
  langs:
  - csharp
  - vb
  name: IsEnable
  nameWithType: FirewallObject.IsEnable
  fullName: AttackSurfaceAnalyzer.Objects.FirewallObject.IsEnable
  type: Property
  source:
    remote:
      path: Lib/Objects/FirewallObject.cs
      branch: gfs/UpdateGuiNewCollectors
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: IsEnable
    path: ../Lib/Objects/FirewallObject.cs
    startLine: 30
  assemblies:
  - AsaLib
  namespace: AttackSurfaceAnalyzer.Objects
  summary: "\nGets or sets a Boolean value indicating if this rule is active \n"
  example: []
  syntax:
    content: public bool IsEnable { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsEnable As Boolean
  overload: AttackSurfaceAnalyzer.Objects.FirewallObject.IsEnable*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: AttackSurfaceAnalyzer.Objects.FirewallObject.LocalAddresses
  commentId: P:AttackSurfaceAnalyzer.Objects.FirewallObject.LocalAddresses
  id: LocalAddresses
  parent: AttackSurfaceAnalyzer.Objects.FirewallObject
  langs:
  - csharp
  - vb
  name: LocalAddresses
  nameWithType: FirewallObject.LocalAddresses
  fullName: AttackSurfaceAnalyzer.Objects.FirewallObject.LocalAddresses
  type: Property
  source:
    remote:
      path: Lib/Objects/FirewallObject.cs
      branch: gfs/UpdateGuiNewCollectors
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: LocalAddresses
    path: ../Lib/Objects/FirewallObject.cs
    startLine: 34
  assemblies:
  - AsaLib
  namespace: AttackSurfaceAnalyzer.Objects
  summary: "\nGets or sets the local addresses that the rule applies to\n"
  example: []
  syntax:
    content: public List<string> LocalAddresses { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public Property LocalAddresses As List(Of String)
  overload: AttackSurfaceAnalyzer.Objects.FirewallObject.LocalAddresses*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: AttackSurfaceAnalyzer.Objects.FirewallObject.LocalPorts
  commentId: P:AttackSurfaceAnalyzer.Objects.FirewallObject.LocalPorts
  id: LocalPorts
  parent: AttackSurfaceAnalyzer.Objects.FirewallObject
  langs:
  - csharp
  - vb
  name: LocalPorts
  nameWithType: FirewallObject.LocalPorts
  fullName: AttackSurfaceAnalyzer.Objects.FirewallObject.LocalPorts
  type: Property
  source:
    remote:
      path: Lib/Objects/FirewallObject.cs
      branch: gfs/UpdateGuiNewCollectors
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: LocalPorts
    path: ../Lib/Objects/FirewallObject.cs
    startLine: 38
  assemblies:
  - AsaLib
  namespace: AttackSurfaceAnalyzer.Objects
  summary: "\nGets or sets the local ports that the rule applies to \n"
  example: []
  syntax:
    content: public List<string> LocalPorts { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public Property LocalPorts As List(Of String)
  overload: AttackSurfaceAnalyzer.Objects.FirewallObject.LocalPorts*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: AttackSurfaceAnalyzer.Objects.FirewallObject.LocalPortType
  commentId: P:AttackSurfaceAnalyzer.Objects.FirewallObject.LocalPortType
  id: LocalPortType
  parent: AttackSurfaceAnalyzer.Objects.FirewallObject
  langs:
  - csharp
  - vb
  name: LocalPortType
  nameWithType: FirewallObject.LocalPortType
  fullName: AttackSurfaceAnalyzer.Objects.FirewallObject.LocalPortType
  type: Property
  source:
    remote:
      path: Lib/Objects/FirewallObject.cs
      branch: gfs/UpdateGuiNewCollectors
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: LocalPortType
    path: ../Lib/Objects/FirewallObject.cs
    startLine: 42
  assemblies:
  - AsaLib
  namespace: AttackSurfaceAnalyzer.Objects
  summary: "\nGets or sets the type of local ports that the rules applies to\n"
  example: []
  syntax:
    content: public FirewallPortType LocalPortType { get; set; }
    parameters: []
    return:
      type: WindowsFirewallHelper.FirewallPortType
    content.vb: Public Property LocalPortType As FirewallPortType
  overload: AttackSurfaceAnalyzer.Objects.FirewallObject.LocalPortType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: AttackSurfaceAnalyzer.Objects.FirewallObject.Name
  commentId: P:AttackSurfaceAnalyzer.Objects.FirewallObject.Name
  id: Name
  parent: AttackSurfaceAnalyzer.Objects.FirewallObject
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: FirewallObject.Name
  fullName: AttackSurfaceAnalyzer.Objects.FirewallObject.Name
  type: Property
  source:
    remote:
      path: Lib/Objects/FirewallObject.cs
      branch: gfs/UpdateGuiNewCollectors
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: Name
    path: ../Lib/Objects/FirewallObject.cs
    startLine: 46
  assemblies:
  - AsaLib
  namespace: AttackSurfaceAnalyzer.Objects
  summary: "\nGets or sets the name of the rule in native format w/o auto string resolving\n"
  example: []
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: AttackSurfaceAnalyzer.Objects.FirewallObject.Name*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: AttackSurfaceAnalyzer.Objects.FirewallObject.Profiles
  commentId: P:AttackSurfaceAnalyzer.Objects.FirewallObject.Profiles
  id: Profiles
  parent: AttackSurfaceAnalyzer.Objects.FirewallObject
  langs:
  - csharp
  - vb
  name: Profiles
  nameWithType: FirewallObject.Profiles
  fullName: AttackSurfaceAnalyzer.Objects.FirewallObject.Profiles
  type: Property
  source:
    remote:
      path: Lib/Objects/FirewallObject.cs
      branch: gfs/UpdateGuiNewCollectors
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: Profiles
    path: ../Lib/Objects/FirewallObject.cs
    startLine: 50
  assemblies:
  - AsaLib
  namespace: AttackSurfaceAnalyzer.Objects
  summary: "\nGets the profiles that this rule belongs to \n"
  example: []
  syntax:
    content: public FirewallProfiles Profiles { get; set; }
    parameters: []
    return:
      type: WindowsFirewallHelper.FirewallProfiles
    content.vb: Public Property Profiles As FirewallProfiles
  overload: AttackSurfaceAnalyzer.Objects.FirewallObject.Profiles*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: AttackSurfaceAnalyzer.Objects.FirewallObject.Protocol
  commentId: P:AttackSurfaceAnalyzer.Objects.FirewallObject.Protocol
  id: Protocol
  parent: AttackSurfaceAnalyzer.Objects.FirewallObject
  langs:
  - csharp
  - vb
  name: Protocol
  nameWithType: FirewallObject.Protocol
  fullName: AttackSurfaceAnalyzer.Objects.FirewallObject.Protocol
  type: Property
  source:
    remote:
      path: Lib/Objects/FirewallObject.cs
      branch: gfs/UpdateGuiNewCollectors
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: Protocol
    path: ../Lib/Objects/FirewallObject.cs
    startLine: 54
  assemblies:
  - AsaLib
  namespace: AttackSurfaceAnalyzer.Objects
  summary: "\nGets or sets the protocol that the rule applies to\n"
  example: []
  syntax:
    content: public string Protocol { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Protocol As String
  overload: AttackSurfaceAnalyzer.Objects.FirewallObject.Protocol*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: AttackSurfaceAnalyzer.Objects.FirewallObject.RemoteAddresses
  commentId: P:AttackSurfaceAnalyzer.Objects.FirewallObject.RemoteAddresses
  id: RemoteAddresses
  parent: AttackSurfaceAnalyzer.Objects.FirewallObject
  langs:
  - csharp
  - vb
  name: RemoteAddresses
  nameWithType: FirewallObject.RemoteAddresses
  fullName: AttackSurfaceAnalyzer.Objects.FirewallObject.RemoteAddresses
  type: Property
  source:
    remote:
      path: Lib/Objects/FirewallObject.cs
      branch: gfs/UpdateGuiNewCollectors
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: RemoteAddresses
    path: ../Lib/Objects/FirewallObject.cs
    startLine: 58
  assemblies:
  - AsaLib
  namespace: AttackSurfaceAnalyzer.Objects
  summary: "\nGets or sets the remote addresses that the rule applies to \n"
  example: []
  syntax:
    content: public List<string> RemoteAddresses { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public Property RemoteAddresses As List(Of String)
  overload: AttackSurfaceAnalyzer.Objects.FirewallObject.RemoteAddresses*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: AttackSurfaceAnalyzer.Objects.FirewallObject.RemotePorts
  commentId: P:AttackSurfaceAnalyzer.Objects.FirewallObject.RemotePorts
  id: RemotePorts
  parent: AttackSurfaceAnalyzer.Objects.FirewallObject
  langs:
  - csharp
  - vb
  name: RemotePorts
  nameWithType: FirewallObject.RemotePorts
  fullName: AttackSurfaceAnalyzer.Objects.FirewallObject.RemotePorts
  type: Property
  source:
    remote:
      path: Lib/Objects/FirewallObject.cs
      branch: gfs/UpdateGuiNewCollectors
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: RemotePorts
    path: ../Lib/Objects/FirewallObject.cs
    startLine: 62
  assemblies:
  - AsaLib
  namespace: AttackSurfaceAnalyzer.Objects
  summary: "\nGets or sets the remote ports that the rule applies to\n"
  example: []
  syntax:
    content: public List<string> RemotePorts { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public Property RemotePorts As List(Of String)
  overload: AttackSurfaceAnalyzer.Objects.FirewallObject.RemotePorts*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: AttackSurfaceAnalyzer.Objects.FirewallObject.Scope
  commentId: P:AttackSurfaceAnalyzer.Objects.FirewallObject.Scope
  id: Scope
  parent: AttackSurfaceAnalyzer.Objects.FirewallObject
  langs:
  - csharp
  - vb
  name: Scope
  nameWithType: FirewallObject.Scope
  fullName: AttackSurfaceAnalyzer.Objects.FirewallObject.Scope
  type: Property
  source:
    remote:
      path: Lib/Objects/FirewallObject.cs
      branch: gfs/UpdateGuiNewCollectors
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: Scope
    path: ../Lib/Objects/FirewallObject.cs
    startLine: 66
  assemblies:
  - AsaLib
  namespace: AttackSurfaceAnalyzer.Objects
  summary: "\nGets or sets the scope that the rule applies to\n"
  example: []
  syntax:
    content: public FirewallScope Scope { get; set; }
    parameters: []
    return:
      type: WindowsFirewallHelper.FirewallScope
    content.vb: Public Property Scope As FirewallScope
  overload: AttackSurfaceAnalyzer.Objects.FirewallObject.Scope*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: AttackSurfaceAnalyzer.Objects.FirewallObject.ServiceName
  commentId: P:AttackSurfaceAnalyzer.Objects.FirewallObject.ServiceName
  id: ServiceName
  parent: AttackSurfaceAnalyzer.Objects.FirewallObject
  langs:
  - csharp
  - vb
  name: ServiceName
  nameWithType: FirewallObject.ServiceName
  fullName: AttackSurfaceAnalyzer.Objects.FirewallObject.ServiceName
  type: Property
  source:
    remote:
      path: Lib/Objects/FirewallObject.cs
      branch: gfs/UpdateGuiNewCollectors
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: ServiceName
    path: ../Lib/Objects/FirewallObject.cs
    startLine: 70
  assemblies:
  - AsaLib
  namespace: AttackSurfaceAnalyzer.Objects
  summary: "\nGets or sets the name of the service that this rule is about\n"
  example: []
  syntax:
    content: public string ServiceName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ServiceName As String
  overload: AttackSurfaceAnalyzer.Objects.FirewallObject.ServiceName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: AttackSurfaceAnalyzer.Objects.FirewallObject.#ctor
  commentId: M:AttackSurfaceAnalyzer.Objects.FirewallObject.#ctor
  id: '#ctor'
  parent: AttackSurfaceAnalyzer.Objects.FirewallObject
  langs:
  - csharp
  - vb
  name: FirewallObject()
  nameWithType: FirewallObject.FirewallObject()
  fullName: AttackSurfaceAnalyzer.Objects.FirewallObject.FirewallObject()
  type: Constructor
  source:
    remote:
      path: Lib/Objects/FirewallObject.cs
      branch: gfs/UpdateGuiNewCollectors
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: .ctor
    path: ../Lib/Objects/FirewallObject.cs
    startLine: 72
  assemblies:
  - AsaLib
  namespace: AttackSurfaceAnalyzer.Objects
  syntax:
    content: public FirewallObject()
    content.vb: Public Sub New
  overload: AttackSurfaceAnalyzer.Objects.FirewallObject.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AttackSurfaceAnalyzer.Objects.FirewallObject.Identity
  commentId: P:AttackSurfaceAnalyzer.Objects.FirewallObject.Identity
  id: Identity
  parent: AttackSurfaceAnalyzer.Objects.FirewallObject
  langs:
  - csharp
  - vb
  name: Identity
  nameWithType: FirewallObject.Identity
  fullName: AttackSurfaceAnalyzer.Objects.FirewallObject.Identity
  type: Property
  source:
    remote:
      path: Lib/Objects/FirewallObject.cs
      branch: gfs/UpdateGuiNewCollectors
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: Identity
    path: ../Lib/Objects/FirewallObject.cs
    startLine: 77
  assemblies:
  - AsaLib
  namespace: AttackSurfaceAnalyzer.Objects
  syntax:
    content: public override string Identity { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overrides ReadOnly Property Identity As String
  overridden: AttackSurfaceAnalyzer.Objects.CollectObject.Identity
  overload: AttackSurfaceAnalyzer.Objects.FirewallObject.Identity*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
references:
- uid: AttackSurfaceAnalyzer.Objects
  commentId: N:AttackSurfaceAnalyzer.Objects
  name: AttackSurfaceAnalyzer.Objects
  nameWithType: AttackSurfaceAnalyzer.Objects
  fullName: AttackSurfaceAnalyzer.Objects
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: AttackSurfaceAnalyzer.Objects.CollectObject
  commentId: T:AttackSurfaceAnalyzer.Objects.CollectObject
  parent: AttackSurfaceAnalyzer.Objects
  name: CollectObject
  nameWithType: CollectObject
  fullName: AttackSurfaceAnalyzer.Objects.CollectObject
- uid: AttackSurfaceAnalyzer.Objects.CollectObject.ResultType
  commentId: F:AttackSurfaceAnalyzer.Objects.CollectObject.ResultType
  parent: AttackSurfaceAnalyzer.Objects.CollectObject
  name: ResultType
  nameWithType: CollectObject.ResultType
  fullName: AttackSurfaceAnalyzer.Objects.CollectObject.ResultType
- uid: AttackSurfaceAnalyzer.Objects.CollectObject.Message
  commentId: P:AttackSurfaceAnalyzer.Objects.CollectObject.Message
  parent: AttackSurfaceAnalyzer.Objects.CollectObject
  name: Message
  nameWithType: CollectObject.Message
  fullName: AttackSurfaceAnalyzer.Objects.CollectObject.Message
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: AttackSurfaceAnalyzer.Objects.FirewallObject.Action*
  commentId: Overload:AttackSurfaceAnalyzer.Objects.FirewallObject.Action
  name: Action
  nameWithType: FirewallObject.Action
  fullName: AttackSurfaceAnalyzer.Objects.FirewallObject.Action
- uid: WindowsFirewallHelper.FirewallAction
  commentId: T:WindowsFirewallHelper.FirewallAction
  parent: WindowsFirewallHelper
  isExternal: true
  name: FirewallAction
  nameWithType: FirewallAction
  fullName: WindowsFirewallHelper.FirewallAction
- uid: WindowsFirewallHelper
  commentId: N:WindowsFirewallHelper
  isExternal: true
  name: WindowsFirewallHelper
  nameWithType: WindowsFirewallHelper
  fullName: WindowsFirewallHelper
- uid: AttackSurfaceAnalyzer.Objects.FirewallObject.ApplicationName*
  commentId: Overload:AttackSurfaceAnalyzer.Objects.FirewallObject.ApplicationName
  name: ApplicationName
  nameWithType: FirewallObject.ApplicationName
  fullName: AttackSurfaceAnalyzer.Objects.FirewallObject.ApplicationName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: AttackSurfaceAnalyzer.Objects.FirewallObject.Direction*
  commentId: Overload:AttackSurfaceAnalyzer.Objects.FirewallObject.Direction
  name: Direction
  nameWithType: FirewallObject.Direction
  fullName: AttackSurfaceAnalyzer.Objects.FirewallObject.Direction
- uid: WindowsFirewallHelper.FirewallDirection
  commentId: T:WindowsFirewallHelper.FirewallDirection
  parent: WindowsFirewallHelper
  isExternal: true
  name: FirewallDirection
  nameWithType: FirewallDirection
  fullName: WindowsFirewallHelper.FirewallDirection
- uid: AttackSurfaceAnalyzer.Objects.FirewallObject.FriendlyName*
  commentId: Overload:AttackSurfaceAnalyzer.Objects.FirewallObject.FriendlyName
  name: FriendlyName
  nameWithType: FirewallObject.FriendlyName
  fullName: AttackSurfaceAnalyzer.Objects.FirewallObject.FriendlyName
- uid: AttackSurfaceAnalyzer.Objects.FirewallObject.IsEnable*
  commentId: Overload:AttackSurfaceAnalyzer.Objects.FirewallObject.IsEnable
  name: IsEnable
  nameWithType: FirewallObject.IsEnable
  fullName: AttackSurfaceAnalyzer.Objects.FirewallObject.IsEnable
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: AttackSurfaceAnalyzer.Objects.FirewallObject.LocalAddresses*
  commentId: Overload:AttackSurfaceAnalyzer.Objects.FirewallObject.LocalAddresses
  name: LocalAddresses
  nameWithType: FirewallObject.LocalAddresses
  fullName: AttackSurfaceAnalyzer.Objects.FirewallObject.LocalAddresses
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: AttackSurfaceAnalyzer.Objects.FirewallObject.LocalPorts*
  commentId: Overload:AttackSurfaceAnalyzer.Objects.FirewallObject.LocalPorts
  name: LocalPorts
  nameWithType: FirewallObject.LocalPorts
  fullName: AttackSurfaceAnalyzer.Objects.FirewallObject.LocalPorts
- uid: AttackSurfaceAnalyzer.Objects.FirewallObject.LocalPortType*
  commentId: Overload:AttackSurfaceAnalyzer.Objects.FirewallObject.LocalPortType
  name: LocalPortType
  nameWithType: FirewallObject.LocalPortType
  fullName: AttackSurfaceAnalyzer.Objects.FirewallObject.LocalPortType
- uid: WindowsFirewallHelper.FirewallPortType
  commentId: T:WindowsFirewallHelper.FirewallPortType
  parent: WindowsFirewallHelper
  isExternal: true
  name: FirewallPortType
  nameWithType: FirewallPortType
  fullName: WindowsFirewallHelper.FirewallPortType
- uid: AttackSurfaceAnalyzer.Objects.FirewallObject.Name*
  commentId: Overload:AttackSurfaceAnalyzer.Objects.FirewallObject.Name
  name: Name
  nameWithType: FirewallObject.Name
  fullName: AttackSurfaceAnalyzer.Objects.FirewallObject.Name
- uid: AttackSurfaceAnalyzer.Objects.FirewallObject.Profiles*
  commentId: Overload:AttackSurfaceAnalyzer.Objects.FirewallObject.Profiles
  name: Profiles
  nameWithType: FirewallObject.Profiles
  fullName: AttackSurfaceAnalyzer.Objects.FirewallObject.Profiles
- uid: WindowsFirewallHelper.FirewallProfiles
  commentId: T:WindowsFirewallHelper.FirewallProfiles
  parent: WindowsFirewallHelper
  isExternal: true
  name: FirewallProfiles
  nameWithType: FirewallProfiles
  fullName: WindowsFirewallHelper.FirewallProfiles
- uid: AttackSurfaceAnalyzer.Objects.FirewallObject.Protocol*
  commentId: Overload:AttackSurfaceAnalyzer.Objects.FirewallObject.Protocol
  name: Protocol
  nameWithType: FirewallObject.Protocol
  fullName: AttackSurfaceAnalyzer.Objects.FirewallObject.Protocol
- uid: AttackSurfaceAnalyzer.Objects.FirewallObject.RemoteAddresses*
  commentId: Overload:AttackSurfaceAnalyzer.Objects.FirewallObject.RemoteAddresses
  name: RemoteAddresses
  nameWithType: FirewallObject.RemoteAddresses
  fullName: AttackSurfaceAnalyzer.Objects.FirewallObject.RemoteAddresses
- uid: AttackSurfaceAnalyzer.Objects.FirewallObject.RemotePorts*
  commentId: Overload:AttackSurfaceAnalyzer.Objects.FirewallObject.RemotePorts
  name: RemotePorts
  nameWithType: FirewallObject.RemotePorts
  fullName: AttackSurfaceAnalyzer.Objects.FirewallObject.RemotePorts
- uid: AttackSurfaceAnalyzer.Objects.FirewallObject.Scope*
  commentId: Overload:AttackSurfaceAnalyzer.Objects.FirewallObject.Scope
  name: Scope
  nameWithType: FirewallObject.Scope
  fullName: AttackSurfaceAnalyzer.Objects.FirewallObject.Scope
- uid: WindowsFirewallHelper.FirewallScope
  commentId: T:WindowsFirewallHelper.FirewallScope
  parent: WindowsFirewallHelper
  isExternal: true
  name: FirewallScope
  nameWithType: FirewallScope
  fullName: WindowsFirewallHelper.FirewallScope
- uid: AttackSurfaceAnalyzer.Objects.FirewallObject.ServiceName*
  commentId: Overload:AttackSurfaceAnalyzer.Objects.FirewallObject.ServiceName
  name: ServiceName
  nameWithType: FirewallObject.ServiceName
  fullName: AttackSurfaceAnalyzer.Objects.FirewallObject.ServiceName
- uid: AttackSurfaceAnalyzer.Objects.FirewallObject.#ctor*
  commentId: Overload:AttackSurfaceAnalyzer.Objects.FirewallObject.#ctor
  name: FirewallObject
  nameWithType: FirewallObject.FirewallObject
  fullName: AttackSurfaceAnalyzer.Objects.FirewallObject.FirewallObject
- uid: AttackSurfaceAnalyzer.Objects.CollectObject.Identity
  commentId: P:AttackSurfaceAnalyzer.Objects.CollectObject.Identity
  parent: AttackSurfaceAnalyzer.Objects.CollectObject
  name: Identity
  nameWithType: CollectObject.Identity
  fullName: AttackSurfaceAnalyzer.Objects.CollectObject.Identity
- uid: AttackSurfaceAnalyzer.Objects.FirewallObject.Identity*
  commentId: Overload:AttackSurfaceAnalyzer.Objects.FirewallObject.Identity
  name: Identity
  nameWithType: FirewallObject.Identity
  fullName: AttackSurfaceAnalyzer.Objects.FirewallObject.Identity
