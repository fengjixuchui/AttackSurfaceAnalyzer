### YamlMime:ManagedReference
items:
- uid: AttackSurfaceAnalyzer.Utils.Telemetry
  commentId: T:AttackSurfaceAnalyzer.Utils.Telemetry
  id: Telemetry
  parent: AttackSurfaceAnalyzer.Utils
  children:
  - AttackSurfaceAnalyzer.Utils.Telemetry.Client
  - AttackSurfaceAnalyzer.Utils.Telemetry.Flush
  - AttackSurfaceAnalyzer.Utils.Telemetry.SetOptOut(System.Boolean)
  - AttackSurfaceAnalyzer.Utils.Telemetry.Setup(System.Boolean)
  - AttackSurfaceAnalyzer.Utils.Telemetry.TestMode
  - AttackSurfaceAnalyzer.Utils.Telemetry.TrackEvent(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  - AttackSurfaceAnalyzer.Utils.Telemetry.TrackTrace(Microsoft.ApplicationInsights.DataContracts.SeverityLevel,System.Exception)
  langs:
  - csharp
  - vb
  name: Telemetry
  nameWithType: Telemetry
  fullName: AttackSurfaceAnalyzer.Utils.Telemetry
  type: Class
  source:
    remote:
      path: Lib/Utils/Telemetry.cs
      branch: gfs/UpdateGuiNewCollectors
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: Telemetry
    path: ../Lib/Utils/Telemetry.cs
    startLine: 9
  assemblies:
  - AsaLib
  namespace: AttackSurfaceAnalyzer.Utils
  syntax:
    content: public class Telemetry
    content.vb: Public Class Telemetry
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: AttackSurfaceAnalyzer.Utils.Telemetry.Client
  commentId: F:AttackSurfaceAnalyzer.Utils.Telemetry.Client
  id: Client
  parent: AttackSurfaceAnalyzer.Utils.Telemetry
  langs:
  - csharp
  - vb
  name: Client
  nameWithType: Telemetry.Client
  fullName: AttackSurfaceAnalyzer.Utils.Telemetry.Client
  type: Field
  source:
    remote:
      path: Lib/Utils/Telemetry.cs
      branch: gfs/UpdateGuiNewCollectors
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: Client
    path: ../Lib/Utils/Telemetry.cs
    startLine: 15
  assemblies:
  - AsaLib
  namespace: AttackSurfaceAnalyzer.Utils
  syntax:
    content: public static TelemetryClient Client
    return:
      type: Microsoft.ApplicationInsights.TelemetryClient
    content.vb: Public Shared Client As TelemetryClient
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: AttackSurfaceAnalyzer.Utils.Telemetry.TestMode
  commentId: M:AttackSurfaceAnalyzer.Utils.Telemetry.TestMode
  id: TestMode
  parent: AttackSurfaceAnalyzer.Utils.Telemetry
  langs:
  - csharp
  - vb
  name: TestMode()
  nameWithType: Telemetry.TestMode()
  fullName: AttackSurfaceAnalyzer.Utils.Telemetry.TestMode()
  type: Method
  source:
    remote:
      path: Lib/Utils/Telemetry.cs
      branch: gfs/UpdateGuiNewCollectors
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: TestMode
    path: ../Lib/Utils/Telemetry.cs
    startLine: 17
  assemblies:
  - AsaLib
  namespace: AttackSurfaceAnalyzer.Utils
  syntax:
    content: public static void TestMode()
    content.vb: Public Shared Sub TestMode
  overload: AttackSurfaceAnalyzer.Utils.Telemetry.TestMode*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: AttackSurfaceAnalyzer.Utils.Telemetry.Setup(System.Boolean)
  commentId: M:AttackSurfaceAnalyzer.Utils.Telemetry.Setup(System.Boolean)
  id: Setup(System.Boolean)
  parent: AttackSurfaceAnalyzer.Utils.Telemetry
  langs:
  - csharp
  - vb
  name: Setup(Boolean)
  nameWithType: Telemetry.Setup(Boolean)
  fullName: AttackSurfaceAnalyzer.Utils.Telemetry.Setup(System.Boolean)
  type: Method
  source:
    remote:
      path: Lib/Utils/Telemetry.cs
      branch: gfs/UpdateGuiNewCollectors
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: Setup
    path: ../Lib/Utils/Telemetry.cs
    startLine: 23
  assemblies:
  - AsaLib
  namespace: AttackSurfaceAnalyzer.Utils
  syntax:
    content: public static void Setup(bool Gui)
    parameters:
    - id: Gui
      type: System.Boolean
    content.vb: Public Shared Sub Setup(Gui As Boolean)
  overload: AttackSurfaceAnalyzer.Utils.Telemetry.Setup*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: AttackSurfaceAnalyzer.Utils.Telemetry.Flush
  commentId: M:AttackSurfaceAnalyzer.Utils.Telemetry.Flush
  id: Flush
  parent: AttackSurfaceAnalyzer.Utils.Telemetry
  langs:
  - csharp
  - vb
  name: Flush()
  nameWithType: Telemetry.Flush()
  fullName: AttackSurfaceAnalyzer.Utils.Telemetry.Flush()
  type: Method
  source:
    remote:
      path: Lib/Utils/Telemetry.cs
      branch: gfs/UpdateGuiNewCollectors
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: Flush
    path: ../Lib/Utils/Telemetry.cs
    startLine: 47
  assemblies:
  - AsaLib
  namespace: AttackSurfaceAnalyzer.Utils
  syntax:
    content: public static void Flush()
    content.vb: Public Shared Sub Flush
  overload: AttackSurfaceAnalyzer.Utils.Telemetry.Flush*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: AttackSurfaceAnalyzer.Utils.Telemetry.SetOptOut(System.Boolean)
  commentId: M:AttackSurfaceAnalyzer.Utils.Telemetry.SetOptOut(System.Boolean)
  id: SetOptOut(System.Boolean)
  parent: AttackSurfaceAnalyzer.Utils.Telemetry
  langs:
  - csharp
  - vb
  name: SetOptOut(Boolean)
  nameWithType: Telemetry.SetOptOut(Boolean)
  fullName: AttackSurfaceAnalyzer.Utils.Telemetry.SetOptOut(System.Boolean)
  type: Method
  source:
    remote:
      path: Lib/Utils/Telemetry.cs
      branch: gfs/UpdateGuiNewCollectors
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: SetOptOut
    path: ../Lib/Utils/Telemetry.cs
    startLine: 52
  assemblies:
  - AsaLib
  namespace: AttackSurfaceAnalyzer.Utils
  syntax:
    content: public static void SetOptOut(bool OptOut)
    parameters:
    - id: OptOut
      type: System.Boolean
    content.vb: Public Shared Sub SetOptOut(OptOut As Boolean)
  overload: AttackSurfaceAnalyzer.Utils.Telemetry.SetOptOut*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: AttackSurfaceAnalyzer.Utils.Telemetry.TrackEvent(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  commentId: M:AttackSurfaceAnalyzer.Utils.Telemetry.TrackEvent(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  id: TrackEvent(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  parent: AttackSurfaceAnalyzer.Utils.Telemetry
  langs:
  - csharp
  - vb
  name: TrackEvent(String, Dictionary<String, String>)
  nameWithType: Telemetry.TrackEvent(String, Dictionary<String, String>)
  fullName: AttackSurfaceAnalyzer.Utils.Telemetry.TrackEvent(System.String, System.Collections.Generic.Dictionary<System.String, System.String>)
  type: Method
  source:
    remote:
      path: Lib/Utils/Telemetry.cs
      branch: gfs/UpdateGuiNewCollectors
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: TrackEvent
    path: ../Lib/Utils/Telemetry.cs
    startLine: 63
  assemblies:
  - AsaLib
  namespace: AttackSurfaceAnalyzer.Utils
  syntax:
    content: public static void TrackEvent(string name, Dictionary<string, string> evt)
    parameters:
    - id: name
      type: System.String
    - id: evt
      type: System.Collections.Generic.Dictionary{System.String,System.String}
    content.vb: Public Shared Sub TrackEvent(name As String, evt As Dictionary(Of String, String))
  overload: AttackSurfaceAnalyzer.Utils.Telemetry.TrackEvent*
  nameWithType.vb: Telemetry.TrackEvent(String, Dictionary(Of String, String))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: AttackSurfaceAnalyzer.Utils.Telemetry.TrackEvent(System.String, System.Collections.Generic.Dictionary(Of System.String, System.String))
  name.vb: TrackEvent(String, Dictionary(Of String, String))
- uid: AttackSurfaceAnalyzer.Utils.Telemetry.TrackTrace(Microsoft.ApplicationInsights.DataContracts.SeverityLevel,System.Exception)
  commentId: M:AttackSurfaceAnalyzer.Utils.Telemetry.TrackTrace(Microsoft.ApplicationInsights.DataContracts.SeverityLevel,System.Exception)
  id: TrackTrace(Microsoft.ApplicationInsights.DataContracts.SeverityLevel,System.Exception)
  parent: AttackSurfaceAnalyzer.Utils.Telemetry
  langs:
  - csharp
  - vb
  name: TrackTrace(SeverityLevel, Exception)
  nameWithType: Telemetry.TrackTrace(SeverityLevel, Exception)
  fullName: AttackSurfaceAnalyzer.Utils.Telemetry.TrackTrace(Microsoft.ApplicationInsights.DataContracts.SeverityLevel, System.Exception)
  type: Method
  source:
    remote:
      path: Lib/Utils/Telemetry.cs
      branch: gfs/UpdateGuiNewCollectors
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: TrackTrace
    path: ../Lib/Utils/Telemetry.cs
    startLine: 72
  assemblies:
  - AsaLib
  namespace: AttackSurfaceAnalyzer.Utils
  syntax:
    content: public static void TrackTrace(SeverityLevel severityLevel, Exception e)
    parameters:
    - id: severityLevel
      type: Microsoft.ApplicationInsights.DataContracts.SeverityLevel
    - id: e
      type: System.Exception
    content.vb: Public Shared Sub TrackTrace(severityLevel As SeverityLevel, e As Exception)
  overload: AttackSurfaceAnalyzer.Utils.Telemetry.TrackTrace*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: AttackSurfaceAnalyzer.Utils
  commentId: N:AttackSurfaceAnalyzer.Utils
  name: AttackSurfaceAnalyzer.Utils
  nameWithType: AttackSurfaceAnalyzer.Utils
  fullName: AttackSurfaceAnalyzer.Utils
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.ApplicationInsights.TelemetryClient
  commentId: T:Microsoft.ApplicationInsights.TelemetryClient
  parent: Microsoft.ApplicationInsights
  isExternal: true
  name: TelemetryClient
  nameWithType: TelemetryClient
  fullName: Microsoft.ApplicationInsights.TelemetryClient
- uid: Microsoft.ApplicationInsights
  commentId: N:Microsoft.ApplicationInsights
  isExternal: true
  name: Microsoft.ApplicationInsights
  nameWithType: Microsoft.ApplicationInsights
  fullName: Microsoft.ApplicationInsights
- uid: AttackSurfaceAnalyzer.Utils.Telemetry.TestMode*
  commentId: Overload:AttackSurfaceAnalyzer.Utils.Telemetry.TestMode
  name: TestMode
  nameWithType: Telemetry.TestMode
  fullName: AttackSurfaceAnalyzer.Utils.Telemetry.TestMode
- uid: AttackSurfaceAnalyzer.Utils.Telemetry.Setup*
  commentId: Overload:AttackSurfaceAnalyzer.Utils.Telemetry.Setup
  name: Setup
  nameWithType: Telemetry.Setup
  fullName: AttackSurfaceAnalyzer.Utils.Telemetry.Setup
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: AttackSurfaceAnalyzer.Utils.Telemetry.Flush*
  commentId: Overload:AttackSurfaceAnalyzer.Utils.Telemetry.Flush
  name: Flush
  nameWithType: Telemetry.Flush
  fullName: AttackSurfaceAnalyzer.Utils.Telemetry.Flush
- uid: AttackSurfaceAnalyzer.Utils.Telemetry.SetOptOut*
  commentId: Overload:AttackSurfaceAnalyzer.Utils.Telemetry.SetOptOut
  name: SetOptOut
  nameWithType: Telemetry.SetOptOut
  fullName: AttackSurfaceAnalyzer.Utils.Telemetry.SetOptOut
- uid: AttackSurfaceAnalyzer.Utils.Telemetry.TrackEvent*
  commentId: Overload:AttackSurfaceAnalyzer.Utils.Telemetry.TrackEvent
  name: TrackEvent
  nameWithType: Telemetry.TrackEvent
  fullName: AttackSurfaceAnalyzer.Utils.Telemetry.TrackEvent
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.Dictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, String>
  nameWithType: Dictionary<String, String>
  fullName: System.Collections.Generic.Dictionary<System.String, System.String>
  nameWithType.vb: Dictionary(Of String, String)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.String)
  name.vb: Dictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: AttackSurfaceAnalyzer.Utils.Telemetry.TrackTrace*
  commentId: Overload:AttackSurfaceAnalyzer.Utils.Telemetry.TrackTrace
  name: TrackTrace
  nameWithType: Telemetry.TrackTrace
  fullName: AttackSurfaceAnalyzer.Utils.Telemetry.TrackTrace
- uid: Microsoft.ApplicationInsights.DataContracts.SeverityLevel
  commentId: T:Microsoft.ApplicationInsights.DataContracts.SeverityLevel
  parent: Microsoft.ApplicationInsights.DataContracts
  isExternal: true
  name: SeverityLevel
  nameWithType: SeverityLevel
  fullName: Microsoft.ApplicationInsights.DataContracts.SeverityLevel
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: Microsoft.ApplicationInsights.DataContracts
  commentId: N:Microsoft.ApplicationInsights.DataContracts
  isExternal: true
  name: Microsoft.ApplicationInsights.DataContracts
  nameWithType: Microsoft.ApplicationInsights.DataContracts
  fullName: Microsoft.ApplicationInsights.DataContracts
