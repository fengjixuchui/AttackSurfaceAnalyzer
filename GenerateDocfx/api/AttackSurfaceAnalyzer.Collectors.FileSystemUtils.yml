### YamlMime:ManagedReference
items:
- uid: AttackSurfaceAnalyzer.Collectors.FileSystemUtils
  commentId: T:AttackSurfaceAnalyzer.Collectors.FileSystemUtils
  id: FileSystemUtils
  parent: AttackSurfaceAnalyzer.Collectors
  children:
  - AttackSurfaceAnalyzer.Collectors.FileSystemUtils.GetFileHash(System.IO.FileSystemInfo)
  - AttackSurfaceAnalyzer.Collectors.FileSystemUtils.GetFileOwner(System.IO.FileSystemInfo)
  - AttackSurfaceAnalyzer.Collectors.FileSystemUtils.GetFilePermissions(System.IO.FileSystemInfo)
  - AttackSurfaceAnalyzer.Collectors.FileSystemUtils.GetSignatureDetails(System.String)
  langs:
  - csharp
  - vb
  name: FileSystemUtils
  nameWithType: FileSystemUtils
  fullName: AttackSurfaceAnalyzer.Collectors.FileSystemUtils
  type: Class
  source:
    remote:
      path: Lib/Collectors/FileSystemUtils.cs
      branch: gfs/UpdateGuiNewCollectors
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: FileSystemUtils
    path: ../Lib/Collectors/FileSystemUtils.cs
    startLine: 12
  assemblies:
  - AsaLib
  namespace: AttackSurfaceAnalyzer.Collectors
  syntax:
    content: public class FileSystemUtils
    content.vb: Public Class FileSystemUtils
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: AttackSurfaceAnalyzer.Collectors.FileSystemUtils.GetFilePermissions(System.IO.FileSystemInfo)
  commentId: M:AttackSurfaceAnalyzer.Collectors.FileSystemUtils.GetFilePermissions(System.IO.FileSystemInfo)
  id: GetFilePermissions(System.IO.FileSystemInfo)
  parent: AttackSurfaceAnalyzer.Collectors.FileSystemUtils
  langs:
  - csharp
  - vb
  name: GetFilePermissions(FileSystemInfo)
  nameWithType: FileSystemUtils.GetFilePermissions(FileSystemInfo)
  fullName: AttackSurfaceAnalyzer.Collectors.FileSystemUtils.GetFilePermissions(System.IO.FileSystemInfo)
  type: Method
  source:
    remote:
      path: Lib/Collectors/FileSystemUtils.cs
      branch: gfs/UpdateGuiNewCollectors
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: GetFilePermissions
    path: ../Lib/Collectors/FileSystemUtils.cs
    startLine: 14
  assemblies:
  - AsaLib
  namespace: AttackSurfaceAnalyzer.Collectors
  syntax:
    content: protected static string GetFilePermissions(FileSystemInfo fileInfo)
    parameters:
    - id: fileInfo
      type: System.IO.FileSystemInfo
    return:
      type: System.String
    content.vb: Protected Shared Function GetFilePermissions(fileInfo As FileSystemInfo) As String
  overload: AttackSurfaceAnalyzer.Collectors.FileSystemUtils.GetFilePermissions*
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
- uid: AttackSurfaceAnalyzer.Collectors.FileSystemUtils.GetFileOwner(System.IO.FileSystemInfo)
  commentId: M:AttackSurfaceAnalyzer.Collectors.FileSystemUtils.GetFileOwner(System.IO.FileSystemInfo)
  id: GetFileOwner(System.IO.FileSystemInfo)
  parent: AttackSurfaceAnalyzer.Collectors.FileSystemUtils
  langs:
  - csharp
  - vb
  name: GetFileOwner(FileSystemInfo)
  nameWithType: FileSystemUtils.GetFileOwner(FileSystemInfo)
  fullName: AttackSurfaceAnalyzer.Collectors.FileSystemUtils.GetFileOwner(System.IO.FileSystemInfo)
  type: Method
  source:
    remote:
      path: Lib/Collectors/FileSystemUtils.cs
      branch: gfs/UpdateGuiNewCollectors
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: GetFileOwner
    path: ../Lib/Collectors/FileSystemUtils.cs
    startLine: 34
  assemblies:
  - AsaLib
  namespace: AttackSurfaceAnalyzer.Collectors
  syntax:
    content: protected static string GetFileOwner(FileSystemInfo fileInfo)
    parameters:
    - id: fileInfo
      type: System.IO.FileSystemInfo
    return:
      type: System.String
    content.vb: Protected Shared Function GetFileOwner(fileInfo As FileSystemInfo) As String
  overload: AttackSurfaceAnalyzer.Collectors.FileSystemUtils.GetFileOwner*
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
- uid: AttackSurfaceAnalyzer.Collectors.FileSystemUtils.GetFileHash(System.IO.FileSystemInfo)
  commentId: M:AttackSurfaceAnalyzer.Collectors.FileSystemUtils.GetFileHash(System.IO.FileSystemInfo)
  id: GetFileHash(System.IO.FileSystemInfo)
  parent: AttackSurfaceAnalyzer.Collectors.FileSystemUtils
  langs:
  - csharp
  - vb
  name: GetFileHash(FileSystemInfo)
  nameWithType: FileSystemUtils.GetFileHash(FileSystemInfo)
  fullName: AttackSurfaceAnalyzer.Collectors.FileSystemUtils.GetFileHash(System.IO.FileSystemInfo)
  type: Method
  source:
    remote:
      path: Lib/Collectors/FileSystemUtils.cs
      branch: gfs/UpdateGuiNewCollectors
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: GetFileHash
    path: ../Lib/Collectors/FileSystemUtils.cs
    startLine: 54
  assemblies:
  - AsaLib
  namespace: AttackSurfaceAnalyzer.Collectors
  syntax:
    content: protected static string GetFileHash(FileSystemInfo fileInfo)
    parameters:
    - id: fileInfo
      type: System.IO.FileSystemInfo
    return:
      type: System.String
    content.vb: Protected Shared Function GetFileHash(fileInfo As FileSystemInfo) As String
  overload: AttackSurfaceAnalyzer.Collectors.FileSystemUtils.GetFileHash*
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
- uid: AttackSurfaceAnalyzer.Collectors.FileSystemUtils.GetSignatureDetails(System.String)
  commentId: M:AttackSurfaceAnalyzer.Collectors.FileSystemUtils.GetSignatureDetails(System.String)
  id: GetSignatureDetails(System.String)
  parent: AttackSurfaceAnalyzer.Collectors.FileSystemUtils
  langs:
  - csharp
  - vb
  name: GetSignatureDetails(String)
  nameWithType: FileSystemUtils.GetSignatureDetails(String)
  fullName: AttackSurfaceAnalyzer.Collectors.FileSystemUtils.GetSignatureDetails(System.String)
  type: Method
  source:
    remote:
      path: Lib/Collectors/FileSystemUtils.cs
      branch: gfs/UpdateGuiNewCollectors
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: GetSignatureDetails
    path: ../Lib/Collectors/FileSystemUtils.cs
    startLine: 73
  assemblies:
  - AsaLib
  namespace: AttackSurfaceAnalyzer.Collectors
  syntax:
    content: public static KeyValuePair<bool, X509Certificate2> GetSignatureDetails(string path)
    parameters:
    - id: path
      type: System.String
    return:
      type: System.Collections.Generic.KeyValuePair{System.Boolean,System.Security.Cryptography.X509Certificates.X509Certificate2}
    content.vb: Public Shared Function GetSignatureDetails(path As String) As KeyValuePair(Of Boolean, X509Certificate2)
  overload: AttackSurfaceAnalyzer.Collectors.FileSystemUtils.GetSignatureDetails*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: AttackSurfaceAnalyzer.Collectors
  commentId: N:AttackSurfaceAnalyzer.Collectors
  name: AttackSurfaceAnalyzer.Collectors
  nameWithType: AttackSurfaceAnalyzer.Collectors
  fullName: AttackSurfaceAnalyzer.Collectors
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: AttackSurfaceAnalyzer.Collectors.FileSystemUtils.GetFilePermissions*
  commentId: Overload:AttackSurfaceAnalyzer.Collectors.FileSystemUtils.GetFilePermissions
  name: GetFilePermissions
  nameWithType: FileSystemUtils.GetFilePermissions
  fullName: AttackSurfaceAnalyzer.Collectors.FileSystemUtils.GetFilePermissions
- uid: System.IO.FileSystemInfo
  commentId: T:System.IO.FileSystemInfo
  parent: System.IO
  isExternal: true
  name: FileSystemInfo
  nameWithType: FileSystemInfo
  fullName: System.IO.FileSystemInfo
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: AttackSurfaceAnalyzer.Collectors.FileSystemUtils.GetFileOwner*
  commentId: Overload:AttackSurfaceAnalyzer.Collectors.FileSystemUtils.GetFileOwner
  name: GetFileOwner
  nameWithType: FileSystemUtils.GetFileOwner
  fullName: AttackSurfaceAnalyzer.Collectors.FileSystemUtils.GetFileOwner
- uid: AttackSurfaceAnalyzer.Collectors.FileSystemUtils.GetFileHash*
  commentId: Overload:AttackSurfaceAnalyzer.Collectors.FileSystemUtils.GetFileHash
  name: GetFileHash
  nameWithType: FileSystemUtils.GetFileHash
  fullName: AttackSurfaceAnalyzer.Collectors.FileSystemUtils.GetFileHash
- uid: AttackSurfaceAnalyzer.Collectors.FileSystemUtils.GetSignatureDetails*
  commentId: Overload:AttackSurfaceAnalyzer.Collectors.FileSystemUtils.GetSignatureDetails
  name: GetSignatureDetails
  nameWithType: FileSystemUtils.GetSignatureDetails
  fullName: AttackSurfaceAnalyzer.Collectors.FileSystemUtils.GetSignatureDetails
- uid: System.Collections.Generic.KeyValuePair{System.Boolean,System.Security.Cryptography.X509Certificates.X509Certificate2}
  commentId: T:System.Collections.Generic.KeyValuePair{System.Boolean,System.Security.Cryptography.X509Certificates.X509Certificate2}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.KeyValuePair`2
  name: KeyValuePair<Boolean, X509Certificate2>
  nameWithType: KeyValuePair<Boolean, X509Certificate2>
  fullName: System.Collections.Generic.KeyValuePair<System.Boolean, System.Security.Cryptography.X509Certificates.X509Certificate2>
  nameWithType.vb: KeyValuePair(Of Boolean, X509Certificate2)
  fullName.vb: System.Collections.Generic.KeyValuePair(Of System.Boolean, System.Security.Cryptography.X509Certificates.X509Certificate2)
  name.vb: KeyValuePair(Of Boolean, X509Certificate2)
  spec.csharp:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate2
    name: X509Certificate2
    nameWithType: X509Certificate2
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Cryptography.X509Certificates.X509Certificate2
    name: X509Certificate2
    nameWithType: X509Certificate2
    fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.KeyValuePair`2
  commentId: T:System.Collections.Generic.KeyValuePair`2
  isExternal: true
  name: KeyValuePair<TKey, TValue>
  nameWithType: KeyValuePair<TKey, TValue>
  fullName: System.Collections.Generic.KeyValuePair<TKey, TValue>
  nameWithType.vb: KeyValuePair(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.KeyValuePair(Of TKey, TValue)
  name.vb: KeyValuePair(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
