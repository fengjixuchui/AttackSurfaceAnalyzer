### YamlMime:ManagedReference
items:
- uid: AttackSurfaceAnalyzer.Objects.OpenPortObject
  commentId: T:AttackSurfaceAnalyzer.Objects.OpenPortObject
  id: OpenPortObject
  parent: AttackSurfaceAnalyzer.Objects
  children:
  - AttackSurfaceAnalyzer.Objects.OpenPortObject.#ctor
  - AttackSurfaceAnalyzer.Objects.OpenPortObject.address
  - AttackSurfaceAnalyzer.Objects.OpenPortObject.family
  - AttackSurfaceAnalyzer.Objects.OpenPortObject.Identity
  - AttackSurfaceAnalyzer.Objects.OpenPortObject.port
  - AttackSurfaceAnalyzer.Objects.OpenPortObject.processName
  - AttackSurfaceAnalyzer.Objects.OpenPortObject.type
  langs:
  - csharp
  - vb
  name: OpenPortObject
  nameWithType: OpenPortObject
  fullName: AttackSurfaceAnalyzer.Objects.OpenPortObject
  type: Class
  source:
    remote:
      path: Lib/Objects/OpenPortObject.cs
      branch: gfs/UpdateGuiNewCollectors
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: OpenPortObject
    path: ../Lib/Objects/OpenPortObject.cs
    startLine: 6
  assemblies:
  - AsaLib
  namespace: AttackSurfaceAnalyzer.Objects
  syntax:
    content: 'public class OpenPortObject : CollectObject'
    content.vb: >-
      Public Class OpenPortObject
          Inherits CollectObject
  inheritance:
  - System.Object
  - AttackSurfaceAnalyzer.Objects.CollectObject
  inheritedMembers:
  - AttackSurfaceAnalyzer.Objects.CollectObject.ResultType
  - AttackSurfaceAnalyzer.Objects.CollectObject.Message
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: AttackSurfaceAnalyzer.Objects.OpenPortObject.address
  commentId: F:AttackSurfaceAnalyzer.Objects.OpenPortObject.address
  id: address
  parent: AttackSurfaceAnalyzer.Objects.OpenPortObject
  langs:
  - csharp
  - vb
  name: address
  nameWithType: OpenPortObject.address
  fullName: AttackSurfaceAnalyzer.Objects.OpenPortObject.address
  type: Field
  source:
    remote:
      path: Lib/Objects/OpenPortObject.cs
      branch: gfs/UpdateGuiNewCollectors
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: address
    path: ../Lib/Objects/OpenPortObject.cs
    startLine: 8
  assemblies:
  - AsaLib
  namespace: AttackSurfaceAnalyzer.Objects
  syntax:
    content: public string address
    return:
      type: System.String
    content.vb: Public address As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AttackSurfaceAnalyzer.Objects.OpenPortObject.family
  commentId: F:AttackSurfaceAnalyzer.Objects.OpenPortObject.family
  id: family
  parent: AttackSurfaceAnalyzer.Objects.OpenPortObject
  langs:
  - csharp
  - vb
  name: family
  nameWithType: OpenPortObject.family
  fullName: AttackSurfaceAnalyzer.Objects.OpenPortObject.family
  type: Field
  source:
    remote:
      path: Lib/Objects/OpenPortObject.cs
      branch: gfs/UpdateGuiNewCollectors
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: family
    path: ../Lib/Objects/OpenPortObject.cs
    startLine: 9
  assemblies:
  - AsaLib
  namespace: AttackSurfaceAnalyzer.Objects
  syntax:
    content: public string family
    return:
      type: System.String
    content.vb: Public family As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AttackSurfaceAnalyzer.Objects.OpenPortObject.type
  commentId: F:AttackSurfaceAnalyzer.Objects.OpenPortObject.type
  id: type
  parent: AttackSurfaceAnalyzer.Objects.OpenPortObject
  langs:
  - csharp
  - vb
  name: type
  nameWithType: OpenPortObject.type
  fullName: AttackSurfaceAnalyzer.Objects.OpenPortObject.type
  type: Field
  source:
    remote:
      path: Lib/Objects/OpenPortObject.cs
      branch: gfs/UpdateGuiNewCollectors
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: type
    path: ../Lib/Objects/OpenPortObject.cs
    startLine: 10
  assemblies:
  - AsaLib
  namespace: AttackSurfaceAnalyzer.Objects
  syntax:
    content: public string type
    return:
      type: System.String
    content.vb: Public type As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AttackSurfaceAnalyzer.Objects.OpenPortObject.port
  commentId: F:AttackSurfaceAnalyzer.Objects.OpenPortObject.port
  id: port
  parent: AttackSurfaceAnalyzer.Objects.OpenPortObject
  langs:
  - csharp
  - vb
  name: port
  nameWithType: OpenPortObject.port
  fullName: AttackSurfaceAnalyzer.Objects.OpenPortObject.port
  type: Field
  source:
    remote:
      path: Lib/Objects/OpenPortObject.cs
      branch: gfs/UpdateGuiNewCollectors
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: port
    path: ../Lib/Objects/OpenPortObject.cs
    startLine: 11
  assemblies:
  - AsaLib
  namespace: AttackSurfaceAnalyzer.Objects
  syntax:
    content: public string port
    return:
      type: System.String
    content.vb: Public port As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AttackSurfaceAnalyzer.Objects.OpenPortObject.processName
  commentId: F:AttackSurfaceAnalyzer.Objects.OpenPortObject.processName
  id: processName
  parent: AttackSurfaceAnalyzer.Objects.OpenPortObject
  langs:
  - csharp
  - vb
  name: processName
  nameWithType: OpenPortObject.processName
  fullName: AttackSurfaceAnalyzer.Objects.OpenPortObject.processName
  type: Field
  source:
    remote:
      path: Lib/Objects/OpenPortObject.cs
      branch: gfs/UpdateGuiNewCollectors
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: processName
    path: ../Lib/Objects/OpenPortObject.cs
    startLine: 12
  assemblies:
  - AsaLib
  namespace: AttackSurfaceAnalyzer.Objects
  syntax:
    content: public string processName
    return:
      type: System.String
    content.vb: Public processName As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AttackSurfaceAnalyzer.Objects.OpenPortObject.#ctor
  commentId: M:AttackSurfaceAnalyzer.Objects.OpenPortObject.#ctor
  id: '#ctor'
  parent: AttackSurfaceAnalyzer.Objects.OpenPortObject
  langs:
  - csharp
  - vb
  name: OpenPortObject()
  nameWithType: OpenPortObject.OpenPortObject()
  fullName: AttackSurfaceAnalyzer.Objects.OpenPortObject.OpenPortObject()
  type: Constructor
  source:
    remote:
      path: Lib/Objects/OpenPortObject.cs
      branch: gfs/UpdateGuiNewCollectors
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: .ctor
    path: ../Lib/Objects/OpenPortObject.cs
    startLine: 14
  assemblies:
  - AsaLib
  namespace: AttackSurfaceAnalyzer.Objects
  syntax:
    content: public OpenPortObject()
    content.vb: Public Sub New
  overload: AttackSurfaceAnalyzer.Objects.OpenPortObject.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AttackSurfaceAnalyzer.Objects.OpenPortObject.Identity
  commentId: P:AttackSurfaceAnalyzer.Objects.OpenPortObject.Identity
  id: Identity
  parent: AttackSurfaceAnalyzer.Objects.OpenPortObject
  langs:
  - csharp
  - vb
  name: Identity
  nameWithType: OpenPortObject.Identity
  fullName: AttackSurfaceAnalyzer.Objects.OpenPortObject.Identity
  type: Property
  source:
    remote:
      path: Lib/Objects/OpenPortObject.cs
      branch: gfs/UpdateGuiNewCollectors
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: Identity
    path: ../Lib/Objects/OpenPortObject.cs
    startLine: 19
  assemblies:
  - AsaLib
  namespace: AttackSurfaceAnalyzer.Objects
  syntax:
    content: public override string Identity { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overrides ReadOnly Property Identity As String
  overridden: AttackSurfaceAnalyzer.Objects.CollectObject.Identity
  overload: AttackSurfaceAnalyzer.Objects.OpenPortObject.Identity*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
references:
- uid: AttackSurfaceAnalyzer.Objects
  commentId: N:AttackSurfaceAnalyzer.Objects
  name: AttackSurfaceAnalyzer.Objects
  nameWithType: AttackSurfaceAnalyzer.Objects
  fullName: AttackSurfaceAnalyzer.Objects
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: AttackSurfaceAnalyzer.Objects.CollectObject
  commentId: T:AttackSurfaceAnalyzer.Objects.CollectObject
  parent: AttackSurfaceAnalyzer.Objects
  name: CollectObject
  nameWithType: CollectObject
  fullName: AttackSurfaceAnalyzer.Objects.CollectObject
- uid: AttackSurfaceAnalyzer.Objects.CollectObject.ResultType
  commentId: F:AttackSurfaceAnalyzer.Objects.CollectObject.ResultType
  parent: AttackSurfaceAnalyzer.Objects.CollectObject
  name: ResultType
  nameWithType: CollectObject.ResultType
  fullName: AttackSurfaceAnalyzer.Objects.CollectObject.ResultType
- uid: AttackSurfaceAnalyzer.Objects.CollectObject.Message
  commentId: P:AttackSurfaceAnalyzer.Objects.CollectObject.Message
  parent: AttackSurfaceAnalyzer.Objects.CollectObject
  name: Message
  nameWithType: CollectObject.Message
  fullName: AttackSurfaceAnalyzer.Objects.CollectObject.Message
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: AttackSurfaceAnalyzer.Objects.OpenPortObject.#ctor*
  commentId: Overload:AttackSurfaceAnalyzer.Objects.OpenPortObject.#ctor
  name: OpenPortObject
  nameWithType: OpenPortObject.OpenPortObject
  fullName: AttackSurfaceAnalyzer.Objects.OpenPortObject.OpenPortObject
- uid: AttackSurfaceAnalyzer.Objects.CollectObject.Identity
  commentId: P:AttackSurfaceAnalyzer.Objects.CollectObject.Identity
  parent: AttackSurfaceAnalyzer.Objects.CollectObject
  name: Identity
  nameWithType: CollectObject.Identity
  fullName: AttackSurfaceAnalyzer.Objects.CollectObject.Identity
- uid: AttackSurfaceAnalyzer.Objects.OpenPortObject.Identity*
  commentId: Overload:AttackSurfaceAnalyzer.Objects.OpenPortObject.Identity
  name: Identity
  nameWithType: OpenPortObject.Identity
  fullName: AttackSurfaceAnalyzer.Objects.OpenPortObject.Identity
