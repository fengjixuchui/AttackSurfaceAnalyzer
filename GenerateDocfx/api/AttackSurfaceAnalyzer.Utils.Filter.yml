### YamlMime:ManagedReference
items:
- uid: AttackSurfaceAnalyzer.Utils.Filter
  commentId: T:AttackSurfaceAnalyzer.Utils.Filter
  id: Filter
  parent: AttackSurfaceAnalyzer.Utils
  children:
  - AttackSurfaceAnalyzer.Utils.Filter.DumpFilters
  - AttackSurfaceAnalyzer.Utils.Filter.IsFiltered(System.String,System.String,System.String,System.String,System.String)
  - AttackSurfaceAnalyzer.Utils.Filter.IsFiltered(System.String,System.String,System.String,System.String,System.String,System.String)
  - AttackSurfaceAnalyzer.Utils.Filter.IsFiltered(System.String,System.String,System.String,System.String,System.String,System.String,System.Text.RegularExpressions.Regex@)
  - AttackSurfaceAnalyzer.Utils.Filter.LoadEmbeddedFilters
  - AttackSurfaceAnalyzer.Utils.Filter.LoadFilters(System.String)
  langs:
  - csharp
  - vb
  name: Filter
  nameWithType: Filter
  fullName: AttackSurfaceAnalyzer.Utils.Filter
  type: Class
  source:
    remote:
      path: Lib/Utils/Filter.cs
      branch: gfs/UpdateGuiNewCollectors
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: Filter
    path: ../Lib/Utils/Filter.cs
    startLine: 11
  assemblies:
  - AsaLib
  namespace: AttackSurfaceAnalyzer.Utils
  syntax:
    content: public static class Filter
    content.vb: Public Module Filter
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: AttackSurfaceAnalyzer.Utils.Filter.IsFiltered(System.String,System.String,System.String,System.String,System.String)
  commentId: M:AttackSurfaceAnalyzer.Utils.Filter.IsFiltered(System.String,System.String,System.String,System.String,System.String)
  id: IsFiltered(System.String,System.String,System.String,System.String,System.String)
  parent: AttackSurfaceAnalyzer.Utils.Filter
  langs:
  - csharp
  - vb
  name: IsFiltered(String, String, String, String, String)
  nameWithType: Filter.IsFiltered(String, String, String, String, String)
  fullName: AttackSurfaceAnalyzer.Utils.Filter.IsFiltered(System.String, System.String, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: Lib/Utils/Filter.cs
      branch: gfs/UpdateGuiNewCollectors
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: IsFiltered
    path: ../Lib/Utils/Filter.cs
    startLine: 19
  assemblies:
  - AsaLib
  namespace: AttackSurfaceAnalyzer.Utils
  syntax:
    content: public static bool IsFiltered(string Platform, string ScanType, string ItemType, string Property, string Target)
    parameters:
    - id: Platform
      type: System.String
    - id: ScanType
      type: System.String
    - id: ItemType
      type: System.String
    - id: Property
      type: System.String
    - id: Target
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsFiltered(Platform As String, ScanType As String, ItemType As String, Property As String, Target As String) As Boolean
  overload: AttackSurfaceAnalyzer.Utils.Filter.IsFiltered*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: AttackSurfaceAnalyzer.Utils.Filter.IsFiltered(System.String,System.String,System.String,System.String,System.String,System.String)
  commentId: M:AttackSurfaceAnalyzer.Utils.Filter.IsFiltered(System.String,System.String,System.String,System.String,System.String,System.String)
  id: IsFiltered(System.String,System.String,System.String,System.String,System.String,System.String)
  parent: AttackSurfaceAnalyzer.Utils.Filter
  langs:
  - csharp
  - vb
  name: IsFiltered(String, String, String, String, String, String)
  nameWithType: Filter.IsFiltered(String, String, String, String, String, String)
  fullName: AttackSurfaceAnalyzer.Utils.Filter.IsFiltered(System.String, System.String, System.String, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: Lib/Utils/Filter.cs
      branch: gfs/UpdateGuiNewCollectors
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: IsFiltered
    path: ../Lib/Utils/Filter.cs
    startLine: 32
  assemblies:
  - AsaLib
  namespace: AttackSurfaceAnalyzer.Utils
  syntax:
    content: public static bool IsFiltered(string Platform, string ScanType, string ItemType, string Property, string FilterType, string Target)
    parameters:
    - id: Platform
      type: System.String
    - id: ScanType
      type: System.String
    - id: ItemType
      type: System.String
    - id: Property
      type: System.String
    - id: FilterType
      type: System.String
    - id: Target
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsFiltered(Platform As String, ScanType As String, ItemType As String, Property As String, FilterType As String, Target As String) As Boolean
  overload: AttackSurfaceAnalyzer.Utils.Filter.IsFiltered*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: AttackSurfaceAnalyzer.Utils.Filter.IsFiltered(System.String,System.String,System.String,System.String,System.String,System.String,System.Text.RegularExpressions.Regex@)
  commentId: M:AttackSurfaceAnalyzer.Utils.Filter.IsFiltered(System.String,System.String,System.String,System.String,System.String,System.String,System.Text.RegularExpressions.Regex@)
  id: IsFiltered(System.String,System.String,System.String,System.String,System.String,System.String,System.Text.RegularExpressions.Regex@)
  parent: AttackSurfaceAnalyzer.Utils.Filter
  langs:
  - csharp
  - vb
  name: IsFiltered(String, String, String, String, String, String, out Regex)
  nameWithType: Filter.IsFiltered(String, String, String, String, String, String, out Regex)
  fullName: AttackSurfaceAnalyzer.Utils.Filter.IsFiltered(System.String, System.String, System.String, System.String, System.String, System.String, out System.Text.RegularExpressions.Regex)
  type: Method
  source:
    remote:
      path: Lib/Utils/Filter.cs
      branch: gfs/UpdateGuiNewCollectors
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: IsFiltered
    path: ../Lib/Utils/Filter.cs
    startLine: 34
  assemblies:
  - AsaLib
  namespace: AttackSurfaceAnalyzer.Utils
  syntax:
    content: public static bool IsFiltered(string Platform, string ScanType, string ItemType, string Property, string FilterType, string Target, out Regex regex)
    parameters:
    - id: Platform
      type: System.String
    - id: ScanType
      type: System.String
    - id: ItemType
      type: System.String
    - id: Property
      type: System.String
    - id: FilterType
      type: System.String
    - id: Target
      type: System.String
    - id: regex
      type: System.Text.RegularExpressions.Regex
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsFiltered(Platform As String, ScanType As String, ItemType As String, Property As String, FilterType As String, Target As String, ByRef regex As Regex) As Boolean
  overload: AttackSurfaceAnalyzer.Utils.Filter.IsFiltered*
  nameWithType.vb: Filter.IsFiltered(String, String, String, String, String, String, ByRef Regex)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: AttackSurfaceAnalyzer.Utils.Filter.IsFiltered(System.String, System.String, System.String, System.String, System.String, System.String, ByRef System.Text.RegularExpressions.Regex)
  name.vb: IsFiltered(String, String, String, String, String, String, ByRef Regex)
- uid: AttackSurfaceAnalyzer.Utils.Filter.DumpFilters
  commentId: M:AttackSurfaceAnalyzer.Utils.Filter.DumpFilters
  id: DumpFilters
  parent: AttackSurfaceAnalyzer.Utils.Filter
  langs:
  - csharp
  - vb
  name: DumpFilters()
  nameWithType: Filter.DumpFilters()
  fullName: AttackSurfaceAnalyzer.Utils.Filter.DumpFilters()
  type: Method
  source:
    remote:
      path: Lib/Utils/Filter.cs
      branch: gfs/UpdateGuiNewCollectors
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: DumpFilters
    path: ../Lib/Utils/Filter.cs
    startLine: 155
  assemblies:
  - AsaLib
  namespace: AttackSurfaceAnalyzer.Utils
  syntax:
    content: public static void DumpFilters()
    content.vb: Public Shared Sub DumpFilters
  overload: AttackSurfaceAnalyzer.Utils.Filter.DumpFilters*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: AttackSurfaceAnalyzer.Utils.Filter.LoadEmbeddedFilters
  commentId: M:AttackSurfaceAnalyzer.Utils.Filter.LoadEmbeddedFilters
  id: LoadEmbeddedFilters
  parent: AttackSurfaceAnalyzer.Utils.Filter
  langs:
  - csharp
  - vb
  name: LoadEmbeddedFilters()
  nameWithType: Filter.LoadEmbeddedFilters()
  fullName: AttackSurfaceAnalyzer.Utils.Filter.LoadEmbeddedFilters()
  type: Method
  source:
    remote:
      path: Lib/Utils/Filter.cs
      branch: gfs/UpdateGuiNewCollectors
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: LoadEmbeddedFilters
    path: ../Lib/Utils/Filter.cs
    startLine: 164
  assemblies:
  - AsaLib
  namespace: AttackSurfaceAnalyzer.Utils
  syntax:
    content: public static void LoadEmbeddedFilters()
    content.vb: Public Shared Sub LoadEmbeddedFilters
  overload: AttackSurfaceAnalyzer.Utils.Filter.LoadEmbeddedFilters*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: AttackSurfaceAnalyzer.Utils.Filter.LoadFilters(System.String)
  commentId: M:AttackSurfaceAnalyzer.Utils.Filter.LoadFilters(System.String)
  id: LoadFilters(System.String)
  parent: AttackSurfaceAnalyzer.Utils.Filter
  langs:
  - csharp
  - vb
  name: LoadFilters(String)
  nameWithType: Filter.LoadFilters(String)
  fullName: AttackSurfaceAnalyzer.Utils.Filter.LoadFilters(System.String)
  type: Method
  source:
    remote:
      path: Lib/Utils/Filter.cs
      branch: gfs/UpdateGuiNewCollectors
      repo: https://github.com/Microsoft/AttackSurfaceAnalyzer.git
    id: LoadFilters
    path: ../Lib/Utils/Filter.cs
    startLine: 212
  assemblies:
  - AsaLib
  namespace: AttackSurfaceAnalyzer.Utils
  syntax:
    content: public static void LoadFilters(string filterLoc = "filters.json")
    parameters:
    - id: filterLoc
      type: System.String
    content.vb: Public Shared Sub LoadFilters(filterLoc As String = "filters.json")
  overload: AttackSurfaceAnalyzer.Utils.Filter.LoadFilters*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: AttackSurfaceAnalyzer.Utils
  commentId: N:AttackSurfaceAnalyzer.Utils
  name: AttackSurfaceAnalyzer.Utils
  nameWithType: AttackSurfaceAnalyzer.Utils
  fullName: AttackSurfaceAnalyzer.Utils
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: AttackSurfaceAnalyzer.Utils.Filter.IsFiltered*
  commentId: Overload:AttackSurfaceAnalyzer.Utils.Filter.IsFiltered
  name: IsFiltered
  nameWithType: Filter.IsFiltered
  fullName: AttackSurfaceAnalyzer.Utils.Filter.IsFiltered
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Text.RegularExpressions.Regex
  commentId: T:System.Text.RegularExpressions.Regex
  parent: System.Text.RegularExpressions
  isExternal: true
  name: Regex
  nameWithType: Regex
  fullName: System.Text.RegularExpressions.Regex
- uid: System.Text.RegularExpressions
  commentId: N:System.Text.RegularExpressions
  isExternal: true
  name: System.Text.RegularExpressions
  nameWithType: System.Text.RegularExpressions
  fullName: System.Text.RegularExpressions
- uid: AttackSurfaceAnalyzer.Utils.Filter.DumpFilters*
  commentId: Overload:AttackSurfaceAnalyzer.Utils.Filter.DumpFilters
  name: DumpFilters
  nameWithType: Filter.DumpFilters
  fullName: AttackSurfaceAnalyzer.Utils.Filter.DumpFilters
- uid: AttackSurfaceAnalyzer.Utils.Filter.LoadEmbeddedFilters*
  commentId: Overload:AttackSurfaceAnalyzer.Utils.Filter.LoadEmbeddedFilters
  name: LoadEmbeddedFilters
  nameWithType: Filter.LoadEmbeddedFilters
  fullName: AttackSurfaceAnalyzer.Utils.Filter.LoadEmbeddedFilters
- uid: AttackSurfaceAnalyzer.Utils.Filter.LoadFilters*
  commentId: Overload:AttackSurfaceAnalyzer.Utils.Filter.LoadFilters
  name: LoadFilters
  nameWithType: Filter.LoadFilters
  fullName: AttackSurfaceAnalyzer.Utils.Filter.LoadFilters
